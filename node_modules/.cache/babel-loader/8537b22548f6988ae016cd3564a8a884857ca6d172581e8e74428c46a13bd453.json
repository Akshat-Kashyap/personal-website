{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksha\\\\OneDrive\\\\Desktop\\\\personal website\\\\src\\\\components\\\\Certifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Certifications = () => {\n  _s();\n  const certsRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        entry.target.classList.add('visible');\n      }\n    }, {\n      threshold: 0.1\n    });\n    if (certsRef.current) {\n      observer.observe(certsRef.current);\n    }\n    return () => {\n      if (certsRef.current) {\n        observer.unobserve(certsRef.current);\n      }\n    };\n  }, []);\n  const certifications = [{\n    title: \"Advanced Certificate Program in Data Science\",\n    issuer: \"IIIT Bangalore (upGrad)\",\n    icon: \"fas fa-graduation-cap\"\n  }, {\n    title: \"IEEE Publication\",\n    issuer: \"Self Defence System using Computer Vision and AI\",\n    icon: \"fas fa-file-alt\"\n  }, {\n    title: \"Machine Learning Fundamentals\",\n    issuer: \"Online Certification\",\n    icon: \"fas fa-robot\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section certifications\",\n    id: \"certifications\",\n    ref: certsRef,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title fade-in\",\n        children: \"Certifications & Publications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"certifications-grid\",\n        children: certifications.map((cert, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cert-card fade-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cert-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: cert.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"cert-title\",\n            children: cert.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"cert-issuer\",\n            children: cert.issuer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Certifications, \"monFMGcqR2Rrnt955KWUSRdy/jA=\");\n_c = Certifications;\nexport default Certifications;\nvar _c;\n$RefreshReg$(_c, \"Certifications\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Certifications","_s","certsRef","observer","IntersectionObserver","entry","isIntersecting","target","classList","add","threshold","current","observe","unobserve","certifications","title","issuer","icon","className","id","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cert","index","_c","$RefreshReg$"],"sources":["C:/Users/aksha/OneDrive/Desktop/personal website/src/components/Certifications.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst Certifications = () => {\r\n  const certsRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          entry.target.classList.add('visible');\r\n        }\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    if (certsRef.current) {\r\n      observer.observe(certsRef.current);\r\n    }\r\n\r\n    return () => {\r\n      if (certsRef.current) {\r\n        observer.unobserve(certsRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const certifications = [\r\n    {\r\n      title: \"Advanced Certificate Program in Data Science\",\r\n      issuer: \"IIIT Bangalore (upGrad)\",\r\n      icon: \"fas fa-graduation-cap\"\r\n    },\r\n    {\r\n      title: \"IEEE Publication\",\r\n      issuer: \"Self Defence System using Computer Vision and AI\",\r\n      icon: \"fas fa-file-alt\"\r\n    },\r\n    {\r\n      title: \"Machine Learning Fundamentals\",\r\n      issuer: \"Online Certification\",\r\n      icon: \"fas fa-robot\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <section className=\"section certifications\" id=\"certifications\" ref={certsRef}>\r\n      <div className=\"container\">\r\n        <h2 className=\"section-title fade-in\">Certifications & Publications</h2>\r\n        <div className=\"certifications-grid\">\r\n          {certifications.map((cert, index) => (\r\n            <div key={index} className=\"cert-card fade-in\">\r\n              <div className=\"cert-icon\">\r\n                <i className={cert.icon}></i>\r\n              </div>\r\n              <h3 className=\"cert-title\">{cert.title}</h3>\r\n              <p className=\"cert-issuer\">{cert.issuer}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Certifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}